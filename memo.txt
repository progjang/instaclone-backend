#3 Backend Setup
##3.0 Setup
>mkdir instaclone
>cd instaclone
>git init
>git remote add origin https://...
>npm init -y
>code .
# gitignore extension 설치 (command palette > add gitignore> node선택)
>touch README.MD


##3.1 Apollo Server
>npm i apollo-server@2.25.2 graphql
>touch server.js
>npm i nodemon --save-dev
+package.json
  "scripts": {
    "dev": "nodemon --exec node server.js"
  },

##3.2 Babel
-babel/core 바벨
-babel/preset-env 코드변환 필요시 업데이트
-babel/node js파일 실행

>npm install --save-dev @babel/core
>npm install @babel/preset-env --save-dev
>touch babel.config.json
+babel.config.json
{
  "presets": ["@babel/preset-env"]
}
>npm install --save-dev @babel/node
+package.json
  "scripts": {
    "dev": "nodemon --exec babel-node server"
  },

# Database (Postgresql)
sudo apt update
sudo apt install postgresql postgresql-contrib
psql --version(버전번호 확인)
sudo service postgresql start (status/start/stop 으로 시작및중지)
sudo -u postgres psql
postgres=# create user {username} password 'xxxx';
postgres=# alter user {username} with createdb replication;q (권한부여)
postgres=# create database db_instaclone owner={name};
윈도우즈에 pgamin4 설치(UI)

##3.4 Prisma (node와 DB 연결해주는 ORM)
(+)VS code에 Prisma extension 설치

>npm install prisma -D
>npx prisma init
+. env에 DB정보 수정

##3.5 Prisma migrate
>schema.prisma에 생성할 모델 정의
> npx prisma migrate dev

##3.9-10 Architecture
도메인별로 typeDefs, resolvers 만들고,
graphql-tools 이용해서 schema 병합하기
graphql-tools 업데이트로 아래 메서드들을 사용하려면 아래와 같이 패키지를 설치 후 사용해야 합니다.

>npm i @graphql-tools/schema @graphql-tools/load-files @graphql-tools/merge
+ schema.js
import { makeExecutableSchema } from '@graphql-tools/schema'
import { loadFilesSync } from '@graphql-tools/load-files'
import { mergeResolvers, mergeTypeDefs } from '@graphql-tools/merge'

## dotenv
>npm i dotenv
+server.js
require("dotenv").config() 다른 모듈 import하기 전 맨위에
-> process.env.PORT 와 같이 .env파일 접근할 수 있게 됨